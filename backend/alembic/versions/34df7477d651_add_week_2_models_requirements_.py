"""Add Week 2 models: Requirements, TestCases, and TraceabilityLinks

Revision ID: 34df7477d651
Revises: 
Create Date: 2025-10-19 07:30:44.698197

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '34df7477d651'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('requirements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('requirement_id', sa.String(length=50), nullable=False),
    sa.Column('type', sa.Enum('AHLR', 'SYSTEM', 'TECHNICAL', 'CERTIFICATION', name='requirementtype'), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('rationale', sa.Text(), nullable=True),
    sa.Column('priority', sa.Enum('CRITICAL', 'HIGH', 'MEDIUM', 'LOW', name='requirementpriority'), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'APPROVED', 'DEPRECATED', 'UNDER_REVIEW', name='requirementstatus'), nullable=True),
    sa.Column('regulatory_document', sa.String(length=200), nullable=True),
    sa.Column('regulatory_section', sa.String(length=100), nullable=True),
    sa.Column('regulatory_title', sa.String(length=200), nullable=True),
    sa.Column('regulatory_page', sa.Integer(), nullable=True),
    sa.Column('file_path', sa.String(length=500), nullable=True),
    sa.Column('verification_method', sa.Enum('TEST', 'ANALYSIS', 'INSPECTION', 'DEMONSTRATION', name='verificationmethod'), nullable=True),
    sa.Column('compliance_status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('owner', sa.String(length=100), nullable=True),
    sa.Column('version', sa.String(length=20), nullable=True),
    sa.Column('issues', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_requirements_category'), 'requirements', ['category'], unique=False)
    op.create_index(op.f('ix_requirements_id'), 'requirements', ['id'], unique=False)
    op.create_index(op.f('ix_requirements_requirement_id'), 'requirements', ['requirement_id'], unique=True)
    op.create_index(op.f('ix_requirements_status'), 'requirements', ['status'], unique=False)
    op.create_index(op.f('ix_requirements_type'), 'requirements', ['type'], unique=False)
    op.create_table('test_cases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_case_id', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('preconditions', sa.Text(), nullable=True),
    sa.Column('test_steps', sa.Text(), nullable=False),
    sa.Column('expected_results', sa.Text(), nullable=False),
    sa.Column('actual_results', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'PASSED', 'FAILED', 'BLOCKED', 'IN_PROGRESS', name='testcasestatus'), nullable=True),
    sa.Column('priority', sa.Enum('CRITICAL', 'HIGH', 'MEDIUM', 'LOW', name='testcasepriority'), nullable=True),
    sa.Column('execution_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('execution_duration', sa.Integer(), nullable=True),
    sa.Column('environment', sa.String(length=100), nullable=True),
    sa.Column('requirement_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['requirement_id'], ['requirements.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_test_cases_id'), 'test_cases', ['id'], unique=False)
    op.create_index(op.f('ix_test_cases_requirement_id'), 'test_cases', ['requirement_id'], unique=False)
    op.create_index(op.f('ix_test_cases_status'), 'test_cases', ['status'], unique=False)
    op.create_index(op.f('ix_test_cases_test_case_id'), 'test_cases', ['test_case_id'], unique=True)
    op.create_table('traceability_links',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('target_id', sa.Integer(), nullable=False),
    sa.Column('link_type', sa.Enum('DERIVES_FROM', 'SATISFIES', 'VERIFIES', 'DEPENDS_ON', 'REFINES', 'CONFLICTS_WITH', name='tracelinktype'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('rationale', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['source_id'], ['requirements.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['target_id'], ['requirements.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('source_id', 'target_id', 'link_type', name='unique_trace_link')
    )
    op.create_index(op.f('ix_traceability_links_id'), 'traceability_links', ['id'], unique=False)
    op.create_index(op.f('ix_traceability_links_link_type'), 'traceability_links', ['link_type'], unique=False)
    op.create_index(op.f('ix_traceability_links_source_id'), 'traceability_links', ['source_id'], unique=False)
    op.create_index(op.f('ix_traceability_links_target_id'), 'traceability_links', ['target_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_traceability_links_target_id'), table_name='traceability_links')
    op.drop_index(op.f('ix_traceability_links_source_id'), table_name='traceability_links')
    op.drop_index(op.f('ix_traceability_links_link_type'), table_name='traceability_links')
    op.drop_index(op.f('ix_traceability_links_id'), table_name='traceability_links')
    op.drop_table('traceability_links')
    op.drop_index(op.f('ix_test_cases_test_case_id'), table_name='test_cases')
    op.drop_index(op.f('ix_test_cases_status'), table_name='test_cases')
    op.drop_index(op.f('ix_test_cases_requirement_id'), table_name='test_cases')
    op.drop_index(op.f('ix_test_cases_id'), table_name='test_cases')
    op.drop_table('test_cases')
    op.drop_index(op.f('ix_requirements_type'), table_name='requirements')
    op.drop_index(op.f('ix_requirements_status'), table_name='requirements')
    op.drop_index(op.f('ix_requirements_requirement_id'), table_name='requirements')
    op.drop_index(op.f('ix_requirements_id'), table_name='requirements')
    op.drop_index(op.f('ix_requirements_category'), table_name='requirements')
    op.drop_table('requirements')
    # ### end Alembic commands ###
